{"ast":null,"code":"// userService.js\nimport API from './axiosConfig';\nconst userService = {\n  login: async (email, password) => {\n    try {\n      const response = await API.post('/login', {\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed.');\n    }\n  },\n  signUp: async (email, password) => {\n    try {\n      const response = await API.post('/register', {\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Sign-up failed.');\n    }\n  },\n  getUserProfile: async () => {\n    try {\n      const response = await API.get('/users/profile');\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to fetch profile.');\n    }\n  },\n  updateUserProfile: async profileData => {\n    try {\n      const response = await API.put('/users/profile', profileData);\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to update profile.');\n    }\n  },\n  uploadProfilePicture: async fileData => {\n    try {\n      const response = await API.post('/users/profile/upload', fileData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to upload profile picture.');\n    }\n  }\n};\nexport default userService;","map":{"version":3,"names":["API","userService","login","email","password","response","post","data","error","_error$response","_error$response$data","Error","message","signUp","_error$response2","_error$response2$data","getUserProfile","get","_error$response3","_error$response3$data","updateUserProfile","profileData","put","_error$response4","_error$response4$data","uploadProfilePicture","fileData","headers","_error$response5","_error$response5$data"],"sources":["/home/mage107/ALX_SE/portfolio_SE_project/STEM-LINK/frontend/src/services/userService.js"],"sourcesContent":["// userService.js\nimport API from './axiosConfig';\n\nconst userService = {\n  login: async (email, password) => {\n    try {\n      const response = await API.post('/login', { email, password });\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Login failed.');\n    }\n  },\n\n  signUp: async (email, password) => {\n    try {\n      const response = await API.post('/register', { email, password });\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Sign-up failed.');\n    }\n  },\n\n  getUserProfile: async () => {\n    try {\n      const response = await API.get('/users/profile');\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Failed to fetch profile.');\n    }\n  },\n\n  updateUserProfile: async (profileData) => {\n    try {\n      const response = await API.put('/users/profile', profileData);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Failed to update profile.');\n    }\n  },\n\n  uploadProfilePicture: async (fileData) => {\n    try {\n      const response = await API.post('/users/profile/upload', fileData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Failed to upload profile picture.');\n    }\n  },\n};\n\nexport default userService;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}