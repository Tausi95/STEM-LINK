{"ast":null,"code":"import API from './axiosConfig';\n\n// Fetch all events or filter by type\nexport const fetchEvents = async (type = '') => {\n  try {\n    const response = await API.get(`/events${type ? `?type=${type}` : ''}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching ${type || 'all'} events:`, error);\n    throw error;\n  }\n};\n\n// Fetch live webinars specifically\nexport const getLiveWebinars = async () => {\n  try {\n    // Assuming 'webinar' is the type used for live webinars in your API\n    const response = await fetchEvents('webinar');\n    return response;\n  } catch (error) {\n    console.error('Error fetching live webinars:', error);\n    throw error;\n  }\n};\nexport const getScheduledEvents = async () => {\n  try {\n    const response = await API.get('/events/scheduled'); //  endpoint,\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching scheduled events:', error);\n    throw error;\n  }\n};\n\n// Fetch a single event by its ID\nexport const fetchEventById = async id => {\n  try {\n    const response = await API.get(`/events/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching event with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Create a new event\nexport const createEvent = async eventData => {\n  try {\n    const response = await API.post('/events', eventData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating event:', error);\n    throw error;\n  }\n};\n\n// Update an existing event\nexport const updateEvent = async (id, updatedData) => {\n  try {\n    const response = await API.put(`/events/${id}`, updatedData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating event with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Delete an event\nexport const deleteEvent = async id => {\n  try {\n    const response = await API.delete(`/events/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting event with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Additional helper for attending an event\nexport const attendEvent = async id => {\n  try {\n    const response = await API.post(`/events/attend/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error attending event with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Additional helper for subscribing to webinars\nexport const subscribeToWebinars = async () => {\n  try {\n    const response = await API.post('/webinars/subscribe');\n    return response.data;\n  } catch (error) {\n    console.error('Error subscribing to webinars:', error);\n    throw error;\n  }\n};\n\n// Additional helper for fetching external events\nexport const fetchExternalEvents = async () => {\n  try {\n    const response = await API.get('/events/external');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching external events:', error);\n    throw error;\n  }\n};\n\n//getting external events\nexport const getExternalEvents = async () => {\n  try {\n    const response = await API.get('/events/external');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching external events:', error);\n    throw error;\n  }\n};\nexport const getProjects = async () => {\n  try {\n    const response = await API.get('events/projects');\n    return response.data;\n  } catch (error) {\n    console.error('error getting project:', error);\n    throw error;\n  }\n};\nexport default {\n  fetchEvents,\n  fetchEventById,\n  createEvent,\n  updateEvent,\n  deleteEvent,\n  attendEvent,\n  subscribeToWebinars,\n  fetchExternalEvents,\n  getLiveWebinars,\n  getScheduledEvents,\n  getExternalEvents,\n  getProjects\n};","map":{"version":3,"names":["API","fetchEvents","type","response","get","data","error","console","getLiveWebinars","getScheduledEvents","fetchEventById","id","createEvent","eventData","post","updateEvent","updatedData","put","deleteEvent","delete","attendEvent","subscribeToWebinars","fetchExternalEvents","getExternalEvents","getProjects"],"sources":["/home/mage107/ALX_SE/portfolio_SE_project/STEM-LINK/frontend/src/services/eventService.js"],"sourcesContent":["import API from './axiosConfig';\n\n// Fetch all events or filter by type\nexport const fetchEvents = async (type = '') => {\n  try {\n    const response = await API.get(`/events${type ? `?type=${type}` : ''}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching ${type || 'all'} events:`, error);\n    throw error;\n  }\n};\n\n// Fetch live webinars specifically\nexport const getLiveWebinars = async () => {\n  try {\n    // Assuming 'webinar' is the type used for live webinars in your API\n    const response = await fetchEvents('webinar');\n    return response;\n  } catch (error) {\n    console.error('Error fetching live webinars:', error);\n    throw error;\n  }\n};\n\n\nexport const getScheduledEvents = async () => {\n  try {\n    const response = await API.get('/events/scheduled');  //  endpoint,\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching scheduled events:', error);\n    throw error;\n  }\n};\n\n// Fetch a single event by its ID\nexport const fetchEventById = async (id) => {\n  try {\n    const response = await API.get(`/events/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching event with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Create a new event\nexport const createEvent = async (eventData) => {\n  try {\n    const response = await API.post('/events', eventData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating event:', error);\n    throw error;\n  }\n};\n\n// Update an existing event\nexport const updateEvent = async (id, updatedData) => {\n  try {\n    const response = await API.put(`/events/${id}`, updatedData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating event with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Delete an event\nexport const deleteEvent = async (id) => {\n  try {\n    const response = await API.delete(`/events/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting event with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Additional helper for attending an event\nexport const attendEvent = async (id) => {\n  try {\n    const response = await API.post(`/events/attend/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error attending event with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Additional helper for subscribing to webinars\nexport const subscribeToWebinars = async () => {\n  try {\n    const response = await API.post('/webinars/subscribe');\n    return response.data;\n  } catch (error) {\n    console.error('Error subscribing to webinars:', error);\n    throw error;\n  }\n};\n\n// Additional helper for fetching external events\nexport const fetchExternalEvents = async () => {\n  try {\n    const response = await API.get('/events/external');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching external events:', error);\n    throw error;\n  }\n};\n\n//getting external events\nexport const getExternalEvents = async () => {\n  try {\n    const response = await API.get('/events/external');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching external events:', error);\n    throw error;\n  }\n};\n\nexport const getProjects = async () => {\n  try {\n    const response = await API.get('events/projects');\n    return response.data\n  } catch (error) {\n    console.error('error getting project:', error);\n    throw error;\n  }\n};\nexport default {\n  fetchEvents,\n  fetchEventById,\n  createEvent,\n  updateEvent,\n  deleteEvent,\n  attendEvent,\n  subscribeToWebinars,\n  fetchExternalEvents,\n  getLiveWebinars,\n  getScheduledEvents,\n  getExternalEvents,\n  getProjects,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}