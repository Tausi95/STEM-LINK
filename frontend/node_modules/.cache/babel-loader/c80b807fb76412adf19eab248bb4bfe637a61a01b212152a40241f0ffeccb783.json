{"ast":null,"code":"var _jsxFileName = \"/home/sage107/STEMProlinks/frontend/src/components/Network.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Network.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Network() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [connections, setConnections] = useState([]);\n  const [filteredConnections, setFilteredConnections] = useState([]);\n  const [networkDatabase, setNetworkDatabase] = useState([]);\n  const [filteredNetwork, setFilteredNetwork] = useState([]);\n\n  // Fetch user connections from the backend\n  const fetchConnections = async () => {\n    try {\n      const response = await axios.get('/api/connections');\n      setConnections(response.data);\n      setFilteredConnections(response.data);\n    } catch (error) {\n      console.error('Error fetching connections', error);\n    }\n  };\n\n  // Fetch network database from the backend\n  const fetchNetworkDatabase = async () => {\n    try {\n      const response = await axios.get('/api/network');\n      setNetworkDatabase(response.data);\n      setFilteredNetwork(response.data);\n    } catch (error) {\n      console.error('Error fetching network database', error);\n    }\n  };\n\n  // Handle search\n  const handleSearch = async event => {\n    const term = event.target.value;\n    setSearchTerm(term);\n    try {\n      // Search connections\n      const filteredConnections = connections.filter(connection => connection.name.toLowerCase().includes(term.toLowerCase()) || connection.profession.toLowerCase().includes(term.toLowerCase()));\n      setFilteredConnections(filteredConnections);\n\n      // Search network database\n      const response = await axios.get(`/api/network/search?term=${term}`);\n      setFilteredNetwork(response.data);\n    } catch (error) {\n      console.error('Error searching network', error);\n    }\n  };\n\n  // Handle connection request\n  const handleConnect = async name => {\n    try {\n      await axios.post('/api/network/connect', {\n        name\n      });\n      alert('Connection request sent!');\n    } catch (error) {\n      console.error('Error sending connection request', error);\n    }\n  };\n  useEffect(() => {\n    fetchConnections();\n    fetchNetworkDatabase();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"network-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Network\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Connect with professionals and peers in the STEM field.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"my-network\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Manage your professional connections or explore new ones.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search connections by name or profession...\",\n        value: searchTerm,\n        onChange: handleSearch,\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"connection-list\",\n        children: filteredConnections.length > 0 ? filteredConnections.map((connection, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"connection-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: connection.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), \" - \", connection.profession, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"connect-btn\",\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No connections found in your network.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), filteredConnections.length === 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"broader-network\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search the STEMProlinks Network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Find new professionals to connect with.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"connection-list\",\n        children: filteredNetwork.length > 0 ? filteredNetwork.map((connection, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"connection-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: connection.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this), \" - \", connection.profession, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"connect-btn\",\n            onClick: () => handleConnect(connection.name),\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No professionals found in the network database.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Network, \"BtVVFhpP0IJ6D3FSK2y7tvJV2/U=\");\n_c = Network;\nexport default Network;\nvar _c;\n$RefreshReg$(_c, \"Network\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Network","_s","searchTerm","setSearchTerm","connections","setConnections","filteredConnections","setFilteredConnections","networkDatabase","setNetworkDatabase","filteredNetwork","setFilteredNetwork","fetchConnections","response","get","data","error","console","fetchNetworkDatabase","handleSearch","event","term","target","value","filter","connection","name","toLowerCase","includes","profession","handleConnect","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","length","map","index","onClick","_c","$RefreshReg$"],"sources":["/home/sage107/STEMProlinks/frontend/src/components/Network.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Network.css';\r\n\r\nfunction Network() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [connections, setConnections] = useState([]);\r\n  const [filteredConnections, setFilteredConnections] = useState([]);\r\n  const [networkDatabase, setNetworkDatabase] = useState([]);\r\n  const [filteredNetwork, setFilteredNetwork] = useState([]);\r\n\r\n  // Fetch user connections from the backend\r\n  const fetchConnections = async () => {\r\n    try {\r\n      const response = await axios.get('/api/connections');\r\n      setConnections(response.data);\r\n      setFilteredConnections(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching connections', error);\r\n    }\r\n  };\r\n\r\n  // Fetch network database from the backend\r\n  const fetchNetworkDatabase = async () => {\r\n    try {\r\n      const response = await axios.get('/api/network');\r\n      setNetworkDatabase(response.data);\r\n      setFilteredNetwork(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching network database', error);\r\n    }\r\n  };\r\n\r\n  // Handle search\r\n  const handleSearch = async (event) => {\r\n    const term = event.target.value;\r\n    setSearchTerm(term);\r\n\r\n    try {\r\n      // Search connections\r\n      const filteredConnections = connections.filter(connection =>\r\n        connection.name.toLowerCase().includes(term.toLowerCase()) ||\r\n        connection.profession.toLowerCase().includes(term.toLowerCase())\r\n      );\r\n      setFilteredConnections(filteredConnections);\r\n\r\n      // Search network database\r\n      const response = await axios.get(`/api/network/search?term=${term}`);\r\n      setFilteredNetwork(response.data);\r\n    } catch (error) {\r\n      console.error('Error searching network', error);\r\n    }\r\n  };\r\n\r\n  // Handle connection request\r\n  const handleConnect = async (name) => {\r\n    try {\r\n      await axios.post('/api/network/connect', { name });\r\n      alert('Connection request sent!');\r\n    } catch (error) {\r\n      console.error('Error sending connection request', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchConnections();\r\n    fetchNetworkDatabase();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"network-container\">\r\n      <h1>Network</h1>\r\n      <p>Connect with professionals and peers in the STEM field.</p>\r\n\r\n      <section className=\"my-network\">\r\n        <h2>My Network</h2>\r\n        <p>Manage your professional connections or explore new ones.</p>\r\n\r\n        <input \r\n          type=\"text\"\r\n          placeholder=\"Search connections by name or profession...\"\r\n          value={searchTerm}\r\n          onChange={handleSearch}\r\n          className=\"search-input\"\r\n        />\r\n\r\n        <ul className=\"connection-list\">\r\n          {filteredConnections.length > 0 ? (\r\n            filteredConnections.map((connection, index) => (\r\n              <li key={index} className=\"connection-item\">\r\n                <strong>{connection.name}</strong> - {connection.profession}\r\n                <button className=\"connect-btn\">Message</button>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <p>No connections found in your network.</p>\r\n          )}\r\n        </ul>\r\n      </section>\r\n\r\n      {filteredConnections.length === 0 && (\r\n        <section className=\"broader-network\">\r\n          <h2>Search the STEMProlinks Network</h2>\r\n          <p>Find new professionals to connect with.</p>\r\n\r\n          <ul className=\"connection-list\">\r\n            {filteredNetwork.length > 0 ? (\r\n              filteredNetwork.map((connection, index) => (\r\n                <li key={index} className=\"connection-item\">\r\n                  <strong>{connection.name}</strong> - {connection.profession}\r\n                  <button \r\n                    className=\"connect-btn\"\r\n                    onClick={() => handleConnect(connection.name)}\r\n                  >\r\n                    Connect\r\n                  </button>\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <p>No professionals found in the network database.</p>\r\n            )}\r\n          </ul>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Network;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}